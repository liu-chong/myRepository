<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>demo2</contextName>

    <property name="logback.logdir" value="logs"/>
    <property name="logback.appname" value="demo2"/>
    <property name="rolling.size" value="200MB"/>
    <property name="remain.day" value="90"/>
    <property name="CHARSET" value="UTF-8"/>
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L [requestId: %X{requestId}] [url: %X{url}] [ip: %X{ip}] [param: %X{param}] [retureValue: %X{retureValue}] [spend: %X{spend}ms]- %msg%n"/>

    <!--配置控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!--配置info-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${logback.logdir}/${logback.appname}/info/${logback.appname}.info.log</File>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>${logback.logdir}/${logback.appname}/info/${logback.appname}.info.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <!--只保留最近90天的日志-->
            <maxHistory>${remain.day}</maxHistory>
            <maxFileSize>${rolling.size}</maxFileSize>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!--配置error-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>Error</level>
        </filter>
        <!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
            如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
            的日志改名为今天的日期。即，<File> 的日志都是当天的。
        -->
        <File>${logback.logdir}/${logback.appname}/error/${logback.appname}.error.log</File>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>${logback.logdir}/${logback.appname}/error/${logback.appname}.error.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <!--只保留最近90天的日志-->
            <maxHistory>${remain.day}</maxHistory>
            <maxFileSize>${rolling.size}</maxFileSize>
        </rollingPolicy>
        <!--日志输出编码格式化-->
        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!--配置mybatis-->
    <logger name="com.example.demo.dao.mapper" level="debug" additivity="true">

    </logger>
    <!--指定最基础的日志输出级别-->
    <root level="INFO">
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>