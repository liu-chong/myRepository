mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.lazy-loading-enabled=true

spring.data.mongodb.uri=mongodb://allindbuser:LNew0fnfw(%23%40nlfkL@39.96.90.206:29019/dossier

spring.datasource.url = jdbc:mysql://192.168.1.22:4417/case_history?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull
#spring.datasource.url2 = jdbc:mysql://192.168.1.22:4417/patient_management?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull
spring.datasource.username=dev
spring.datasource.password=e2s0m1h6
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
spring.datasource.driverClassName=com.mysql.jdbc.Driver


spring.datasource2.url= jdbc:mysql://192.168.1.22:4417/patient_management?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull
spring.datasource2.driverClassName=com.mysql.jdbc.Driver
spring.datasource2.username=dev
spring.datasource2.password=e2s0m1h6


## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=1200





#spring.data.mongodb.uri = mongodb://192.168.1.46:27017/dossier
#spring.data.mongodb.secondary.database=dossier
#spring.data.mongodb.secondary.host=39.96.90.206
#spring.data.mongodb.secondary.username=allindbuser
#spring.data.mongodb.secondary.password=LNew0fnfw(%23%40nlfkL
#spring.data.mongodb.secondary.port=29019

#spring.data.mongodb.secondary.database = dossier
##spring.data.mongodb.secondary.host = 192.168.1.46
#spring.data.mongodb.secondary.port = 27017
spring.jackson.timeZone=GMT+8FF
spring.http.multipart.max-request-size=-1
spring.http.multipart.max-file-size=-1

spring.application.name=importTempFromOnlineToTest
server.port=8081



#
##============== kafka ===================
## 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=192.168.153.135:9092
##=============== provider =======================
#spring.kafka.producer.retries=0
## 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
## 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##=============== consumer =======================
## 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
## 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#spring.data.elasticsearch.cluster-name=
#spring.data.elasticsearch.cluster-nodes=
#spring.data.elasticsearch.properties. =
#spring.data.elasticsearch.repositories.enabled=true
